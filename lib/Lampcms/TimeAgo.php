<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 *       the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website's Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attributes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2012 (or current year) Dmitri Snytkine
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: 0.2.45
 *
 *
 */


namespace Lampcms;


/**
 * Class to format time difference
 * (From php comments page
 * http://us.php.net/manual/en/dateinterval.format.php)
 *
 * Usage example:
 * TimeAgo::format(new DateTime('Sat, 22 Jan 2011 21:19:03 -0600')
 * will return formatted string like 10 days and 5 hours ago
 * Notice we don't pass $end param in the example, so
 * current time is used instead
 *
 *
 */
class TimeAgo
{

    public static function format(\DateTime $start, \DateTime $end = null)
    {
        if (!isset($_SESSION['locale']) || (0 === \strncmp('en', $_SESSION['locale'], 2))) {

            $end = (!$end) ? new \DateTime() : $end;

            $interval = $end->diff($start);
            $doPlural = function($nb, $str)
            {
                return $nb > 1 ? $str . 's' : $str;
            }; // adds plurals

            $format = array();
            if ($interval->y !== 0) {
                $format[] = "%y " . $doPlural($interval->y, "year");
            }
            if ($interval->m !== 0) {
                $format[] = "%m " . $doPlural($interval->m, "month");
            }
            if ($interval->d !== 0) {
                $format[] = "%d " . $doPlural($interval->d, "day");
            }
            if ($interval->h !== 0) {
                $format[] = "%h " . $doPlural($interval->h, "hour");
            }
            if ($interval->i !== 0) {
                $format[] = "%i " . $doPlural($interval->i, "minute");
            }
            if ($interval->s !== 0) {
                if (!count($format)) {
                    return "less than a minute ago";
                }
            }

            // We use the two biggest parts
            if (count($format) > 1) {
                $format = \array_shift($format) . " and " . \array_shift($format) . ' ago';
            } else {
                $format = \array_pop($format) . ' ago';
            }

            return $interval->format($format);
        } else {

            return TimeFormatter::formatTime($_SESSION['locale'], $start->getTimestamp());
        }
    }
}
