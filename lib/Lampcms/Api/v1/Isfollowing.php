<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 *       the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attributes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2012 (or current year) Dmitri Snytkine
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: 0.2.45
 *
 *
 */


/**
 * API controller to check if user identified
 * by uid
 * IS FOLLOWING resource identified by 'type' ('q', 't', 'u')
 * and having value of "val"
 * For example /api/api.php?a=isfollowing&uid=3&t=u&val=23
 * Will return is_following = true IF user with id 3 IS FOLLOWING
 * user with id 23 (false if not following)
 *
 * /api/api.php?a=isfollowing&uid=3&t=q&val=125
 * Will return is_following = true if user with id 3
 * is following question with id 125
 *
 * /api/api.php?a=isfollowing&uid=3&t=t&val=eskimo
 * will return is_following = true if user with id 3
 * is following tag 'eskimo'
 *
 */


namespace Lampcms\Api\v1;

use Lampcms\Api\Api;

class Isfollowing extends Api
{
    /**
     * Required params are uid and val
     *
     * @var array
     */
    protected $aRequired = array('uid', 'val');

    /**
     * Type of resource to check if
     * the user is following
     *
     * one of 3 possible types are
     * 'u'  - user (default)
     * 't' - tag
     * 'q' - question
     *
     * @var string
     */
    protected $type = 'u';

    protected $uid;

    protected $val;

    protected $isFollowing = false;

    protected function main()
    {
        $this->uid = $this->Request['uid'];
        $this->val = $this->Request['val'];
        $this->setType()
            ->getData()
            ->setOutput();
    }

    protected function setType()
    {
        $this->type = $this->Request->get('type', 's', 'u');

        return $this;
    }

    protected function getData()
    {
        switch ($this->type) {
            case 'u':
                $data = $this->Registry->Mongo->USERS->findOne(array('_id' => $this->uid, 'a_f_u' => array('$in' => array((int)$this->val))), array('_id' => 1));
                break;

            case 't':
                $data = $this->Registry->Mongo->USERS->findOne(array('_id' => $this->uid, 'a_f_t' => array('$in' => array($this->val))), array('_id' => 1));
                break;

            case 'q':
                $data = $this->Registry->Mongo->QUESTIONS->findOne(array('_id' => (int)$this->val, 'a_flwrs' => array('$in' => array($this->uid))), array('_id' => 1));
                break;
        }


        d('data: ' . print_r($data, 1));
        $this->isFollowing = !empty($data);

        return $this;
    }


    protected function setOutput()
    {

        $data = array('isfollowing' => $this->isFollowing);

        $this->Output->setData($data);

        return $this;
    }

}
