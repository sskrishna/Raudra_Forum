<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 *       the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attributes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2012 (or current year) Dmitri Snytkine
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: 0.2.45
 *
 *
 */


namespace Lampcms\Controllers;

use Lampcms\Responder;

use \Lampcms\WebPage;
use \Lampcms\Request;

/**
 * Controller for the "Edit categories"
 * admin interface
 *
 * @author Dmitri Snytkine
 *
 */
class Editcategory extends WebPage
{

    /**
     * Permission required to use this controller is edit_category
     * must be defined in config/acl.ini
     * @var string
     */
    protected $permission = 'edit_category';

    /**
     * layoutID 1 means single-column page
     * @var int
     */
    protected $layoutID = 1;


    protected function main()
    {

        if (Request::isPost()) {
            $sort = $this->Registry->Request->get('sort', 'i');
            if (!empty($sort)) {
                $this->saveSortOrder();
            } else {
                $this->processForm();
            }
        } elseif (Request::isAjax()) {
            $delId = $this->Registry->Request->get('del', 'i');

            if (!empty($delId)) {
                $this->delete($delId);
            }
        }
        $this->aPageVars['title'] = '@@Categories Editor@@';
        /**
         * Categories editor uses
         * jQuery UI NestedSortable module
         * must load these js files
         * as well as our own extra YUI module
         * that handles Category editor
         */
        $this->lastJs = array(
            '{_DIR_}/js/jquery-1.5.2.min.js',
            '{_DIR_}/js/jquery-ui-1.8.11.custom.min.js',
            '{_DIR_}/js/jquery.ui.nestedSortable.js',
            '{_DIR_}/js/cateditor.js'
        );
        $this->extraCss[] = '{_DIR_}/css/cateditor.css';
        $this->setBody();

    }

    /**
     * Process 'delete' of one category
     *
     * @param int $id
     */
    protected function delete($id)
    {
        d('cp');
        try {
            $this->checkAccessPermission('edit_category');
            $canEdit = true;
        } catch (\Exception $e) {
            $canEdit = false;
            $res = true;
        }

        if ($canEdit) {
            $Editor = new \Lampcms\Category\Editor($this->Registry);
            $res = $Editor->delete($id);
        }

        Responder::sendJSON(array('deleted' => $id, 'res' => $res));
    }

    /**
     * Save the submitted sort order
     * of categories to database
     *
     * @throws \Exception
     */
    public function saveSortOrder()
    {
        if (empty($_POST['cat']) && !is_array($_POST['cat'])) {
            throw new \Exception('Unable to sort the order. No "cat" element in POST ');
        }

        d('cat array: ' . print_r($_POST['cat'], 1));

        try {
            $this->checkAccessPermission('edit_category');
            $canEdit = true;
        } catch (\Exception $e) {
            $canEdit = false;
        }

        if ($canEdit) {
            $Editor = new \Lampcms\Category\Editor($this->Registry);
            $res = $Editor->saveOrder($_POST['cat']);
            d('saved ' . $res . ' categories');
        }
        /**
         * @todo
         * Translate String
         */
        Responder::sendJSON(array('alert' => '@@Sort order saved@@'));
    }

    protected function processForm()
    {

        $formData = $this->Registry->Request->getArray();
        if (!empty($_FILES)) {
            $formData['files'] = $_FILES;
        }

        $Notification = $this->Registry->Dispatcher->post($this, 'onBeforeCategoryEdit', array('data' => $formData));
        if (!$Notification->isNotificationCancelled()) {

            try {
                $this->checkAccessPermission('edit_category');
                $canEdit = true;
            } catch (\Exception $e) {
                $canEdit = false;
            }

            /**
             * @todo when YUI 3.5.0 is released with fixed
             * upload-iframe or even better with XHR2 with upload support
             * we will either return a page with json here (in case of iframe)
             * or just add processing of uploaded file.
             */
            d('before start of Editor');
            if (Request::isAjax()) {
                d('sending out ajax');
                $Editor = new \Lampcms\Category\Editor($this->Registry);
                $aRes = $Editor->saveCategory(new \Lampcms\Category\SubmittedWWW($this->Registry->Request), $canEdit);
                $aRes = \array_diff_key($aRes, array('i_parent' => 1, 'a_subs' => 1));
                d('aRes: ' . print_r($aRes, 1));

                Responder::sendJSON(array('category' => $aRes));
            }
        } else {
            $message = ('@@One of the Observers cancelled the onBeforeCategoryEdit event@@');
            d($message);
            Responder::sendJSON(array('alert' => $message));
        }

        return '@@Category data saved@@';
    }

    /**
     * Set the variables for the 'body' or main template
     * Using the tplEditcats template
     *
     * @return \Lampcms\Controllers\Editcategory
     */
    protected function setBody()
    {

        $ListRenderer = new \Lampcms\Category\Renderer($this->Registry);
        $list = $ListRenderer->getSortableList();

        $vars = array('cat_title' => '@@Category Title@@',
            'manage_category' => '@@Add or Edit Category@@',
            'cat_title_desc' => '@@Enter title of the category@@',
            'cat_slug' => '@@Category Slug@@',
            'catslug_desc' => '@@Seo-friendly URL part of category@@',
            'cat_desc' => '@@Category Description@@',
            'catdesc_desc' => '@@A short description of this category. HTML is allowed. If entering html, make sure html is valid!@@',
            'catonly' => '@@Category-only@@',
            'catonly_desc' => '@@Category-only can contain only sub-categories and cannot contain posts@@',
            'submit' => '@@Add New Category@@',
            'reset' => '@@Reset@@',
            'categories' => '@@Sort Categories@@',
            'cat_list' => $list,
            'parent_select' => '',
            'active' => '@@Active@@',
            'active_desc' => '',
            'active_checked' => 'checked',
            'save' => '@@Save Sort Order@@');


        $this->aPageVars['body'] = \tplEditcats::parse($vars);

        return $this;
    }
}
