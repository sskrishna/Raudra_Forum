<?php
/**
 *
 * License, TERMS and CONDITIONS
 *
 * This software is licensed under the GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * Please read the license here : http://www.gnu.org/licenses/lgpl-3.0.txt
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * ATTRIBUTION REQUIRED
 * 4. All web pages generated by the use of this software, or at least
 *       the page that lists the recent questions (usually home page) must include
 *    a link to the http://www.lampcms.com and text of the link must indicate that
 *    the website\'s Questions/Answers functionality is powered by lampcms.com
 *    An example of acceptable link would be "Powered by <a href="http://www.lampcms.com">LampCMS</a>"
 *    The location of the link is not important, it can be in the footer of the page
 *    but it must not be hidden by style attributes
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * This product includes GeoLite data created by MaxMind,
 *  available from http://www.maxmind.com/
 *
 *
 * @author     Dmitri Snytkine <cms@lampcms.com>
 * @copyright  2005-2012 (or current year) Dmitri Snytkine
 * @license    http://www.gnu.org/licenses/lgpl-3.0.txt GNU LESSER GENERAL PUBLIC LICENSE (LGPL) version 3
 * @link       http://www.lampcms.com   Lampcms.com project
 * @version    Release: 0.2.45
 *
 *
 */


namespace Lampcms\Controllers;

use \Lampcms\WebPage;
use \Lampcms\Template\Urhere;
use \Lampcms\Utf8String;
use \Lampcms\Modules\Search\Factory as SearchFactory;

class Search extends WebPage
{

    protected $aRequired = array('q');

    /**
     * Search term
     *
     * @var string
     */
    protected $term;

    /**
     * Search term with html brackets replaced by their html entities
     *
     * @var string
     */
    protected $safeTerm;

    /**
     * Pagination links on the page
     * will not be handled by Ajax
     *
     * @var bool
     */
    protected $notAjaxPaginatable = true;

    /**
     *
     *
     * @var object returned b SearchFactory
     */
    protected $Search;

    protected $pageID = 1;

    /**
     * (non-PHPdoc)
     *
     * @see Lampcms.WebPage::main()
     */
    protected function main()
    {

        /**
         * Do NOT run urldecode() on request string
         * as it's already decoded because it uses
         *  $_GET as underlying array, and php
         *  already decodes $_GET or $_POST vars
         */
        try {
            $term       = $this->Registry->Router->getSegment(2);
            $this->term = Utf8String::stringFactory(\urldecode($term));

        } catch ( \Lampcms\Uri\SegmentNotFoundException $e ) {
            $this->term = $this->Registry->Request->getUTF8('q');
        }

        $this->safeTerm             = \str_replace(array('<', '>'), array('&lt;', '&gt'), $this->term->valueOf());
        $this->aPageVars['qheader'] = '<h1>@@Search results for@@: ' . $this->safeTerm . '</h1>';

        $this->aPageVars['title'] = '@@Questions matching@@ &#39;' . $this->safeTerm . '&#39;';
        d('$this->term: ' . $this->term);

        $this->Search = SearchFactory::get($this->Registry);

        $this->Search->search($this->term);

        $this->makeTopTabs()
            ->makeInfo()
            ->makeBody();
    }

    protected function makeTopTabs()
    {

        $tabs                       = Urhere::factory($this->Registry)->get('tplToptabs', 'questions');
        $this->aPageVars['topTabs'] = $tabs;

        return $this;
    }


    protected function sendCacheHeaders()
    {


        return $this;
    }


    protected function makeInfo()
    {

        $this->aPageVars['side'] = \tplSearchInfo::parse(array($this->Search->count(), $this->safeTerm, 'questions matching'), false);


        return $this;
    }


    protected function makeBody()
    {


        $this->aPageVars['body'] = \tplQlist::parse(array('', $this->Search->getHtml(), $this->Search->getPagerLinks(), $this->notAjaxPaginatable), false);

        return $this;
    }

}
